stages:
  - docker-build
  - docker-test
  # TODO: unit tests
  - docker-push
  - check

variables:
  BETA_VERSION: beta-$CI_COMMIT_SHORT_SHA

.common_rules: &common_rules
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    when: always

.template:image-registry-login:
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.template:docker-load:
  script:
    - echo "Docker version > ${BETA_VERSION}"
    - docker load -i image.tar

build:
  tags:
    - docker
  stage: docker-build
  artifacts:
    expire_in: 30 mins
    paths:
      - image.tar
  script:
    - env
    - >
      docker build -t $CI_REGISTRY_IMAGE:latest
      --build-arg BUILD_VERSION=$CI_PIPELINE_IID
      --build-arg BETA_VERSION=$BETA_VERSION
      --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
      --label "org.opencontainers.image.url=$CI_PROJECT_URL"
      --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
      --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
      --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME" .
    - docker save $IMAGE -o image.tar
    - !reference [.rule-never-on-schedule, rules]

test:
  image: "docker:stable"
  stage: docker-test
  tags:
    - docker
    - medium
  script:
    - docker run --rm $CONTAINER_IMAGE:latest -c "echo $BETA_VERSION"
    - docker run --rm $CONTAINER_IMAGE:latest -c "yarn danger --version"
    - docker run --rm $CONTAINER_IMAGE:latest -c "jq --version"
    - docker run --rm $CONTAINER_IMAGE:latest -c "uuidgen --version"
  rules:
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  - !reference [.rule-never-on-schedule, rules]
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    changes:
      - "Dockerfile"
      - "*.js"
      - "src/*"
      - ".gitlab-ci.yml"

push:
  image: "docker:stable"
  stage: docker-push
  tags:
    - docker
    - medium
  before_script:
    - !reference [.template:image-registry-login, script]
  script:
    - !reference [.template:docker-load, script]
    - docker push $CI_REGISTRY_IMAGE:latest
  rules:
  - if: '$CI_PIPELINE_SOURCE == "trigger"'
    when: never
  - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    changes:
      - "Dockerfile"
      - "*.js"
      - "src/*"
      - ".gitlab-ci.yml"

danger-mr-review:
  image:
    name: "$CI_REGISTRY_IMAGE:latest"
  stage: check
  tags:
    - generic
    - medium
  cache: {}
  variables:
    DANGER_GITLAB_API_BASE_URL: "${CI_API_V4_URL}"
    DANGER_GITLAB_API_TOKEN: "${DANGER_GITLAB_API_TOKEN}"
  script:
  - code-review
  rules:
  - if: '$CI_PIPELINE_SOURCE == "trigger"'
    when: always
