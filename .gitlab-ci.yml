stages:
 - build
 - check

# variables:
#   DOCKER_BUILD_TAG: "stable"

.common_rules: &common_rules
  - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    when: always
  #   - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
  #     when: always
  #   - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"'
  #     when: always
  #   - if: '$CI_PIPELINE_SOURCE == $CI_DEFAULT_BRANCH'
  #     when: never

build-and-push:
  image: "docker:stable"
  stage: build
  tags:
   - docker
   - medium
  # before_script:
  #  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
   - >
    docker build -t $CI_REGISTRY_IMAGE:latest
    --build-arg BUILD_VERSION=$CI_PIPELINE_IID
    --label "org.opencontainers.image.title=$CI_PROJECT_TITLE"
    --label "org.opencontainers.image.url=$CI_PROJECT_URL"
    --label "org.opencontainers.image.created=$CI_JOB_STARTED_AT"
    --label "org.opencontainers.image.revision=$CI_COMMIT_SHA"
    --label "org.opencontainers.image.version=$CI_COMMIT_REF_NAME"
    .
   - docker push $CI_REGISTRY_IMAGE:latest

danger-check:
  image:
    name: "registry.gitlab.com/hnbi/platform-as-a-service/test-projects/automate-code-review:latest"
  stage: check
  tags:
   - docker
   - medium
  cache: {}
  rules:
  - *common_rules
  variables:
    DANGER_GITLAB_HOST: "https://gitlab.com"
    DANGER_GITLAB_API_BASE_URL: "${CI_API_V4_URL}"
    DANGER_GITLAB_API_TOKEN: "${DANGER_GITLAB_API_TOKEN}"
  script:
  - danger.sh
